version: build.{build}.branch.{branch}

environment:
  CIBW_TEST_REQUIRES: pytest
  CIBW_TEST_COMMAND: pytest {project}/tests -m "not pytorch"
  CIBW_ENVIRONMENT_LINUX: OPENBLASROOT=/usr
  CIBW_ENVIRONMENT_MACOS: ACCELERATE=1
  CIBW_ENVIRONMENT_WINDOWS: OPENBLASROOT=C:\\Libraries\\openblas
  CIBW_BEFORE_ALL_LINUX: bash {project}/recipe/cibw_before_all_linux.sh
  CIBW_BEFORE_ALL_MACOS: bash {project}/recipe/cibw_before_all_osx.sh
  CIBW_BEFORE_ALL_WINDOWS: powershell.exe {project}/recipe/cibw_before_all_win.ps1
  CIBW_BEFORE_BUILD: python -m pip install -r {project}/recipe/cibw_before_requirements.txt
  CIBW_REPAIR_WHEEL_COMMAND_WINDOWS: delvewheel repair -w {dest_dir} {wheel} --add-path "C:\Libraries\openblas\bin"
  CIBW_SKIP: pp* *-win32 *-manylinux*
  matrix:
    # - job_name: manylinux-x86_64
    #   CIBW_ARCHS_LINUX: x86_64
    #   CIBW_SKIP: pp* *-musllinux*
    #   APPVEYOR_BUILD_WORKER_IMAGE: Ubuntu
    - job_name: musllinux-x86_64
      CIBW_ARCHS_LINUX: x86_64
      CIBW_SKIP: pp* *-manylinux*
      APPVEYOR_BUILD_WORKER_IMAGE: Ubuntu
    # - job_name: win64
    #   CIBW_SKIP: pp* *-win32
    #   APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017
    # - job_name: osx
    #   CIBW_SKIP: pp*
    #   APPVEYOR_BUILD_WORKER_IMAGE: macos-mojave
    # - job_name: manylinux-i686
    #   CIBW_ARCHS_LINUX: i686
    #   CIBW_SKIP: pp* *-musllinux*
    #   APPVEYOR_BUILD_WORKER_IMAGE: Ubuntu
    # - job_name: musllinux-i686
    #   CIBW_ARCHS_LINUX: i686
    #   CIBW_SKIP: pp* *-manylinux*
    #   APPVEYOR_BUILD_WORKER_IMAGE: Ubuntu

stack: python 3.7

branches:
  except:
    - /docs/

init:
  - ps: >-
      if ($env:APPVEYOR_REPO_TAG -eq "true")
      {
        Update-AppveyorBuild -Version "$($env:APPVEYOR_REPO_TAG_NAME.TrimStart("v"))"
      }
  - sh: export DIST=dist-${APPVEYOR_JOB_NAME}
  - cmd: set DIST=dist-%APPVEYOR_JOB_NAME%
  - cmd: set PATH=C:\Python37-x64;C:\Python37-x64\Scripts;%PATH%
  - cmd: call "C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\vcvarsall.bat" amd64

build: script

cache:
  - C:\Libraries\openblas -> recipe\cibw_before_build_win.ps1

install:
  - python -m pip install cibuildwheel

build_script:
  - sh: cibuildwheel --output-dir ${DIST}
  - cmd: cibuildwheel --output-dir %DIST%

after_build:
  - cmd: 7z a %DIST%.zip %DIST%
  - sh: zip -r ${DIST}.zip ${DIST}

artifacts:
  path: '*.zip'
