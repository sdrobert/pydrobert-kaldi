version: build.{build}.branch.{branch}

image: Visual Studio 2017

environment:
  MINICONDA_PATH_32: "C:\\Miniconda3"
  MINICONDA_PATH_64: "C:\\Miniconda3-x64"
  matrix:
    - PY_VER: 3.8
    - PY_VER: 3.7
    - PY_VER: 3.6
    - PY_VER: 3.5

clone_depth: 1

matrix:
  fast_finish: true

init:
  - ps: >-
      if ($env:APPVEYOR_REPO_TAG -eq "true")
      {
        Update-AppveyorBuild -Version "$($env:APPVEYOR_REPO_TAG_NAME.TrimStart("v"))"
      }
  - call "C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\VC\Auxiliary\Build\vcvars64.bat"
  - call %MINICONDA_PATH_64%\Scripts\activate.bat
  - set CONDA_SUBDIR=win-64
  - conda config --set always_yes yes --set changeps1 no
  - conda update -q --all
  - conda install conda-build

install:
  - conda build recipe --no-test --python %PY_VER% -m recipe\ci_build.yaml
  - if errorlevel 1 exit 1
  - conda create -n test python=%PY_VER% pytest
  - conda install -n test pydrobert-kaldi --use-local
  - if errorlevel 1 exit 1
  - conda activate test

build: off

branches:
  except:
    - /travis.*/
    - /docs.*/

test_script:
  - pytest -m "not pytorch"

artifacts:
  - path: dist-win-py%PY_VER%.zip

after_test:
  - conda deactivate
  - mkdir dist-win-py%PY_VER%\win-64
  - python recipe\copy_conda_build_packages.py pydrobert-kaldi dist-win-py%PY_VER%/win-64
  - if errorlevel 1 exit 1
  - 7z a dist-win-py%PY_VER%.zip %cd%\dist-win-py%PY_VER%

deploy:
  - provider: GitHub
    description: pydrobert-kaldi version $(appveyor_build_version) for Windows
    artifact: dist-win-py%PY_VER%.zip
    auth_token:
      secure: QlAHDK+8kEoeqnpg7+GcCOeNfDLT4Vvuoy60Rsh8ncOQTA7sLUnzL4H5tOxE5gmn
    on:
      appveyor_repo_tag: true
  - provider: GitHub
    tag: appveyor_dummy
    description: a dummy windows deployment
    artifact: dist-win-py%PY_VER%.zip
    auth_token:
      secure: QlAHDK+8kEoeqnpg7+GcCOeNfDLT4Vvuoy60Rsh8ncOQTA7sLUnzL4H5tOxE5gmn
    draft: true
    prerelease: true
    on:
      branch: /appveyor.*/